{"version":3,"sources":["components/TodoList/TodoList.jsx","components/CurrentUser/CurrentUser.jsx","api.js","App.jsx","index.js"],"names":["TodoList","state","selectValue","inputValue","handleChange","event","target","value","name","setState","this","props","selectUser","todos","visibleTodos","items","filter","item","completed","title","toLowerCase","includes","filterTodos","className","placeholder","onChange","map","option","key","todo","id","type","readOnly","onClick","userId","React","Component","defaultProps","CurrentUser","users","clearUser","user","email","phone","API_URL","request","url","a","fetch","response","json","result","data","App","selectedUserId","handleUser","Promise","all","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.aa84d446.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './TodoList.scss';\n\nexport class TodoList extends React.Component {\n  state = {\n    selectValue: '',\n    inputValue: '',\n  }\n\n  handleChange = (event) => {\n    const { value, name } = event.target;\n\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  render() {\n    const { selectUser, todos } = this.props;\n    const { selectValue, inputValue } = this.state;\n    const options = ['all', 'active', 'completed'];\n\n    function filterTodos(items) {\n      switch (selectValue) {\n        case 'active':\n          return items.filter(item => item.completed === false);\n        case 'completed':\n          return items.filter(item => item.completed === true);\n        default:\n          return items.filter(item => (\n            item.title.toLowerCase().includes(inputValue)\n          ));\n      }\n    }\n\n    const visibleTodos = filterTodos(todos);\n\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n\n        <div className=\"TodoList__list-container\">\n          <input\n            name=\"inputValue\"\n            value={inputValue}\n            placeholder=\"Search by title\"\n            onChange={this.handleChange}\n          />\n          <select\n            name=\"selectValue\"\n            value={selectValue}\n            onChange={this.handleChange}\n          >\n            {options.map(option => (\n              <option key={option}>\n                {option}\n              </option>\n            ))}\n          </select>\n          <ul className=\"TodoList__list\">\n            {visibleTodos.map(todo => (\n              <li\n                className=\"TodoList__item TodoList__item--unchecked\"\n                key={todo.id}\n              >\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    readOnly\n                  />\n                  <p>{todo.title}</p>\n                </label>\n                <button\n                  onClick={() => {\n                    selectUser(todo.userId);\n                  }}\n                  className=\"\n              TodoList__user-button\n              TodoList__user-button--selected\n              button\n            \"\n                  type=\"button\"\n                >\n                  {`User#${todo.userId}`}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      completed: PropTypes.bool.isRequired,\n    }),\n  ),\n  selectUser: PropTypes.func.isRequired,\n};\n\nTodoList.defaultProps = {\n  todos: [],\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './CurrentUser.scss';\n\nexport const CurrentUser = ({ users, userId, clearUser }) => (\n  <div className=\"CurrentUser\">\n    {users.map(user => (user.id === userId ? (\n      <>\n        <h2 className=\"CurrentUser__title\">\n          <span>{`Selected user: ${user.id}`}</span>\n        </h2>\n        <h3 className=\"CurrentUser__name\">{user.name}</h3>\n        <p className=\"CurrentUser__email\">{user.email}</p>\n        <p className=\"CurrentUser__phone\">{user.phone}</p>\n        <button\n          type=\"button\"\n          className=\"CurrentUser__clear\"\n          onClick={() => {\n            clearUser(0);\n          }}\n        >\n          Clear\n        </button>\n      </>\n    ) : null))}\n  </div>\n);\n\nCurrentUser.propTypes = {\n  users: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      email: PropTypes.string.isRequired,\n      phone: PropTypes.string.isRequired,\n    }),\n  ),\n  userId: PropTypes.number.isRequired,\n  clearUser: PropTypes.func.isRequired,\n};\n\nCurrentUser.defaultProps = {\n  users: [],\n};\n","const API_URL = 'https://mate-api.herokuapp.com/';\n\nasync function request(url) {\n  const response = await fetch(`${API_URL}${url}`);\n\n  const result = await response.json();\n\n  return result.data;\n}\n\nexport const getTodos = () => request('todos');\nexport const getUsers = () => request('users');\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getUsers, getTodos } from './api';\n\nclass App extends React.Component {\n  state = {\n    selectedUserId: 0,\n    users: [],\n    todos: [],\n  };\n\n  async componentDidMount() {\n    const [users, todos] = await Promise.all([\n      getUsers('users'),\n      getTodos('todos'),\n    ]);\n\n    this.setState({\n      users,\n      todos: todos.filter(todo => (\n        todo.id && todo.title && todo.userId\n      )),\n    });\n  }\n\n  handleUser = (userId) => {\n    this.setState({ selectedUserId: userId });\n  };\n\n  render() {\n    const { selectedUserId, users, todos } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            selectUser={this.handleUser}\n            todos={todos}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                users={users}\n                clearUser={this.handleUser}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}