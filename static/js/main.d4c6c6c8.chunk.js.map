{"version":3,"sources":["components/TodoList/TodoList.jsx","components/CurrentUser/CurrentUser.jsx","api.js","App.jsx","index.js"],"names":["TodoList","state","selectQuery","inputQuery","handleChange","event","target","value","name","setState","items","this","filter","item","completed","title","toLowerCase","includes","props","selectUser","todos","visibleTodos","filterTodos","className","placeholder","onChange","map","option","key","todo","classNames","id","type","checked","readOnly","onClick","userId","React","Component","defaultProps","CurrentUser","user","clearUser","email","phone","API_URL","request","url","a","fetch","response","json","result","data","App","selectedUserId","users","handleSelectUser","handleClearUser","selectedUser","find","Promise","all","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d4c6c6c8.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './TodoList.scss';\n\nexport class TodoList extends React.Component {\n  state = {\n    selectQuery: '',\n    inputQuery: '',\n  }\n\n  handleChange = (event) => {\n    const { value, name } = event.target;\n\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  filterTodos(items) {\n    const { selectQuery, inputQuery } = this.state;\n\n    switch (selectQuery) {\n      case 'active':\n        return items.filter(item => item.completed === false);\n      case 'completed':\n        return items.filter(item => item.completed === true);\n      default:\n        return items.filter(item => (\n          item.title.toLowerCase().includes(inputQuery)\n        ));\n    }\n  }\n\n  render() {\n    const { selectUser, todos } = this.props;\n    const { selectQuery, inputQuery } = this.state;\n    const options = ['all', 'active', 'completed'];\n\n    const visibleTodos = this.filterTodos(todos);\n\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n\n        <div className=\"TodoList__list-container\">\n          <input\n            name=\"inputQuery\"\n            value={inputQuery}\n            placeholder=\"Search by title\"\n            onChange={this.handleChange}\n          />\n          <select\n            name=\"selectQuery\"\n            value={selectQuery}\n            onChange={this.handleChange}\n          >\n            {options.map(option => (\n              <option key={option}>\n                {option}\n              </option>\n            ))}\n          </select>\n          <ul className=\"TodoList__list\">\n            {visibleTodos.map(todo => (\n              <li\n                className={classNames('TodoList__item', {\n                  'TodoList__item--unchecked': todo.completed === false,\n                  'TodoList__item--checked': todo.completed === true,\n                })}\n                key={todo.id}\n              >\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    checked={todo.completed === true}\n                    readOnly\n                  />\n                  <p>{todo.title}</p>\n                </label>\n                <button\n                  onClick={() => {\n                    selectUser(todo.userId);\n                  }}\n                  className=\"\n              TodoList__user-button\n              TodoList__user-button--selected\n              button\n            \"\n                  type=\"button\"\n                >\n                  {`User#${todo.userId}`}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      completed: PropTypes.bool.isRequired,\n    }),\n  ),\n  selectUser: PropTypes.func.isRequired,\n};\n\nTodoList.defaultProps = {\n  todos: [],\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './CurrentUser.scss';\n\nexport const CurrentUser = ({ user, clearUser }) => (\n  <div className=\"CurrentUser\">\n    <h2 className=\"CurrentUser__title\">\n      <span>{`Selected user: ${user.id}`}</span>\n    </h2>\n    <h3 className=\"CurrentUser__name\">{user.name}</h3>\n    <p className=\"CurrentUser__email\">{user.email}</p>\n    <p className=\"CurrentUser__phone\">{user.phone}</p>\n    <button\n      type=\"button\"\n      className=\"CurrentUser__clear\"\n      onClick={clearUser}\n    >\n      Clear\n    </button>\n  </div>\n);\n\nCurrentUser.propTypes = {\n  user: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n    phone: PropTypes.string.isRequired,\n  }),\n  clearUser: PropTypes.func.isRequired,\n};\n\nCurrentUser.defaultProps = {\n  user: null,\n};\n","const API_URL = 'https://mate-api.herokuapp.com/';\n\nasync function request(url) {\n  const response = await fetch(`${API_URL}${url}`);\n\n  const result = await response.json();\n\n  return result.data;\n}\n\nexport const getTodos = () => request('todos');\nexport const getUsers = () => request('users');\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getUsers, getTodos } from './api';\n\nclass App extends React.Component {\n  state = {\n    selectedUserId: 0,\n    users: [],\n    todos: [],\n  };\n\n  async componentDidMount() {\n    const [users, todos] = await Promise.all([\n      getUsers('users'),\n      getTodos('todos'),\n    ]);\n\n    this.setState({\n      users,\n      todos: todos.filter(todo => (\n        todo.id && todo.title && todo.userId\n      )),\n    });\n  }\n\n  handleSelectUser = (userId) => {\n    this.setState({ selectedUserId: userId });\n  };\n\n  handleClearUser = () => {\n    this.setState({ selectedUserId: 0 });\n  }\n\n  selectedUser = () => {\n    const { users, selectedUserId } = this.state;\n\n    return users.find(user => user.id === selectedUserId);\n  }\n\n  render() {\n    const { todos, selectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            selectUser={this.handleSelectUser}\n            todos={todos}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                user={this.selectedUser()}\n                clearUser={this.handleClearUser}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}